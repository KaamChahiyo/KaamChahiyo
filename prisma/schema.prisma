// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String    @id @default(cuid())
  sessionToken String    @unique
  accessToken  String    @unique
  userId       String
  expires      DateTime
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  user         User      @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  bio           String    @db.VarChar(255)
  password      String?
  role          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
  sessions      Session[]
  Job           Job[]
  Job           Job[]
}

model Payment {
  id          Int      @id @default(autoincrement())
  method      String
  status      Boolean  @default(false)
  paymentDate DateTime
  Job         Job      @relation(fields: [jobId], references: [id])
  jobId       Int
}

model Category {
  id   Int     @id @default(autoincrement())
  name String?
  Job  Job[]
}

model Location {
  id   Int     @id @default(autoincrement())
  name String?
  Job  Job[]
}

model Job {
  id             Int       @id @default(autoincrement())
  title          String?
  postedOn       DateTime  @default(now())
  isVerified     Boolean   @default(false)
  description    String    @db.VarChar(255)
  Category       Category? @relation(fields: [categoryId], references: [id])
  categoryId     Int
  price          Float?
  location       Location  @relation(fields: [locationId], references: [id])
  locationId     Int
  Payment        Payment[]
  postedByUser   User      @relation(name: "posted-by-user", fields: [postedByUserId], references: [id])
  postedByUserId String
  User           User?     @relation(fields: [userId], references: [id])
  userId         String?
}
